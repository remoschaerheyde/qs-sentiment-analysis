{"version":3,"file":"halyard-enigma-mixin.js","sources":["../src/enigma-mixin/utils.js","../src/enigma-mixin/halyard-enigma-mixin.js"],"sourcesContent":["/**\r\n * @public\r\n * @param {{qThousandSep: string, qDecimalSep: string qMoneyThousandSep: string, qMoneyDecimalSep: string, qMoneyFmt: string,\r\n * qTimeFmt: string, qDateFmt: string, qTimestampFmt: string, qFirstWeekDay: string, qReferenceDay: string,\r\n * qFirstMonthOfYear: string, qCollation: string, qMonthNames: string,\r\n * qLongMonthNames: string, qDayNames: string, qLongDayNames: string }} localInfoData\r\n * @returns {{ThousandSep: string, DecimalSep: string, MoneyThousandSep: string, MoneyDecimalSep: string,\r\n * MoneyFormat: string, TimeFormat: string, DateFormat: string, TimestampFormat: string, FirstWeekDay: string,\r\n * ReferenceDay: string, FirstMonthOfYear: string, CollationLocale: string, MonthNames: string, LongMonthNames: string,\r\n * DayNames: string, LongDayNames: string}}\r\n */\r\nexport default function convertQixGetLocalInfo(localInfoData) {\r\n  return {\r\n    ThousandSep: localInfoData.qThousandSep,\r\n    DecimalSep: localInfoData.qDecimalSep,\r\n    MoneyThousandSep: localInfoData.qMoneyThousandSep,\r\n    MoneyDecimalSep: localInfoData.qMoneyDecimalSep,\r\n    MoneyFormat: localInfoData.qMoneyFmt,\r\n    TimeFormat: localInfoData.qTimeFmt,\r\n    DateFormat: localInfoData.qDateFmt,\r\n    TimestampFormat: localInfoData.qTimestampFmt,\r\n    FirstWeekDay: localInfoData.qFirstWeekDay,\r\n    ReferenceDay: localInfoData.qReferenceDay,\r\n    FirstMonthOfYear: localInfoData.qFirstMonthOfYear,\r\n    CollationLocale: localInfoData.qCollation,\r\n    MonthNames: localInfoData.qCalendarStrings.qMonthNames,\r\n    LongMonthNames: localInfoData.qCalendarStrings.qLongMonthNames,\r\n    DayNames: localInfoData.qCalendarStrings.qDayNames,\r\n    LongDayNames: localInfoData.qCalendarStrings.qLongDayNames,\r\n  };\r\n}\r\n","import convertQixGetLocalInfo from './utils';\r\n\r\nconst CONNECTION_ERROR = 'Connection Error';\r\nconst LOADING_ERROR = 'Loading Error';\r\nconst SYNTAX_ERROR = 'Syntax Error';\r\n/**\r\n * Create error message\r\n * @private\r\n * @param {string} errorType\r\n * @param {object} qixError\r\n * @param {(Table|HyperCube)} item\r\n * @returns {{type: string, message: string, item: object, qixError: string}}\r\n */\r\nfunction createErrorMessage(errorType, qixError, item) {\r\n  return {\r\n    type: errorType,\r\n    message: qixError.message || qixError.qErrorString,\r\n    item,\r\n    qixError,\r\n  };\r\n}\r\n\r\nconst halyardMixin = {\r\n  types: 'Global',\r\n  init(args) {\r\n    if (args.config) {\r\n      args.api.Promise = args.config.Promise;\r\n    } else {\r\n      args.api.Promise = args.Promise;\r\n    }\r\n  },\r\n  extend: {\r\n    /**\r\n     * Creates a session app based on the model in the halyard instance\r\n     * @public\r\n     * @param {Halyard} halyard - A halyard instance\r\n     * @returns {Promise.<TResult>}\r\n     */\r\n    createSessionAppUsingHalyard(halyard) {\r\n      const that = this;\r\n      return that.createSessionApp().then(app => that.setScriptAndReloadWithHalyard(app, halyard, false));\r\n    },\r\n\r\n    /**\r\n     * Creates an app with the model in the halyard instance.\r\n     * @public\r\n     * @param {string} appName\r\n     * @param {Halyard} halyard\r\n     * @returns {Promise.<TResult>}\r\n     */\r\n    createAppUsingHalyard(appName, halyard) {\r\n      const that = this;\r\n      return that.createApp(appName).then((app) => {\r\n        const appId = app.qAppId;\r\n        return that.openDoc(appId).then(result => that.setScriptAndReloadWithHalyard(result, halyard, true));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Reloads an existing app with the model in the halyard instance. Can also create an app is createIfMissing is set to true.\r\n     * @public\r\n     * @param {string} existingAppName\r\n     * @param {Halyard} halyard\r\n     * @param {boolean} createIfMissing\r\n     * @returns {Promise.<TResult>}\r\n     */\r\n    reloadAppUsingHalyard(existingAppName, halyard, createIfMissing) {\r\n      const that = this;\r\n      return that.openDoc(existingAppName)\r\n        .catch((error) => {\r\n          const COULD_NOT_FIND_APP = 1003;\r\n\r\n          if (createIfMissing && error.code === COULD_NOT_FIND_APP) {\r\n            return that.createApp(existingAppName).then(app => that.openDoc(app.qAppId));\r\n          }\r\n          return that.Promise.reject(error);\r\n        })\r\n        .then(result => that.setScriptAndReloadWithHalyard(result, halyard, true));\r\n    },\r\n\r\n    /**\r\n     * Use the model in halyard to set the script of an app and save it\r\n     * @public\r\n     * @param {Qix.app} app\r\n     * @param {Halyard} halyard\r\n     * @param {boolean} doSaveAfterReload\r\n     * @returns {Promise.<TResult>}\r\n     */\r\n    setScriptAndReloadWithHalyard(app, halyard, doSaveAfterReload) {\r\n      const that = this;\r\n      const deferredConnections = [];\r\n\r\n      halyard.getConnections().forEach((connection) => {\r\n        const qixConnectionObject = connection.getQixConnectionObject();\r\n        if (qixConnectionObject) {\r\n          const connectionPromise = app.createConnection(qixConnectionObject)\r\n            .then(result => result, (err) => {\r\n              const LOCERR_CONNECTION_ALREADY_EXISTS = 2000;\r\n\r\n              // Will not throw error if connection already exists.\r\n              // The connections guid makes the connections unique and we assumes that it\r\n              // is the same that was previously created\r\n              if (!(err.code && err.code === LOCERR_CONNECTION_ALREADY_EXISTS)) {\r\n                throw createErrorMessage(CONNECTION_ERROR, err, connection);\r\n              }\r\n            });\r\n\r\n          deferredConnections.push(connectionPromise);\r\n        }\r\n      });\r\n\r\n      return that.Promise.all(deferredConnections).then(() => app.getLocaleInfo().then((localeInfoResult) => {\r\n        halyard.setDefaultSetStatements(convertQixGetLocalInfo(localeInfoResult), true);\r\n        return app.globalApi.configureReload(true, true, false).then(() => app.setScript(halyard.getScript())\r\n          .then(() => app.doReload().then(() => app.globalApi.getProgress(0).then((progressResult) => {\r\n            if (progressResult.qErrorData.length !== 0) {\r\n              return app.checkScriptSyntax().then((syntaxCheckData) => {\r\n                if (syntaxCheckData.length === 0) {\r\n                  throw createErrorMessage(LOADING_ERROR, progressResult.qErrorData[0]);\r\n                } else {\r\n                  const item = halyard.getItemThatGeneratedScriptAt(syntaxCheckData[0].qTextPos);\r\n                  throw createErrorMessage(SYNTAX_ERROR, progressResult.qErrorData[0], item);\r\n                }\r\n              });\r\n            }\r\n\r\n            if (doSaveAfterReload) {\r\n              return app.doSave().then(() => app);\r\n            }\r\n\r\n            return app;\r\n          }))));\r\n      }));\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst exposeGlobalApi = {\r\n  types: 'Doc',\r\n  init(args) {\r\n    const getObjectArgs = {\r\n      handle: -1,\r\n      id: 'Global',\r\n      type: 'Global',\r\n    };\r\n    if (args.config) {\r\n      getObjectArgs.genericType = 'Global';\r\n    } else {\r\n      getObjectArgs.customType = 'Global';\r\n      getObjectArgs.delta = true;\r\n    }\r\n    args.api.globalApi = args.api.session.getObjectApi(getObjectArgs);\r\n  },\r\n};\r\n\r\nmodule.exports = [halyardMixin, exposeGlobalApi];\r\n"],"names":[],"mappings":"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"}